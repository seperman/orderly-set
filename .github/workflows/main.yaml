name: Unit Tests

on:
  push:
    branches: [ "master", "dev" ]
  pull_request:
    branches: [ "master", "dev" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, "3.10", "3.11", "3.12", "3.13"]
        architecture: ["x64"]
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python ${{ matrix.python-version }} on ${{ matrix.architecture }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Upgrade setuptools
      if: matrix.python-version == 3.12
      run: |
        # workaround for 3.12, SEE: https://github.com/pypa/setuptools/issues/3661#issuecomment-1813845177
        pip install --upgrade setuptools
    - name: Install dependencies
      run: pip install -r requirements-dev.txt
    - name: Test with pytest and get the coverage
      if: matrix.python-version == 3.12
      run: |
        pytest --cov-report=xml --cov=orderly_set tests/
    - name: Test with pytest and no coverage report
      if: matrix.python-version != 3.12
      run: |
        pytest
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == 3.12
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        file: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        env_vars: OS,PYTHON
        fail_ci_if_error: true
